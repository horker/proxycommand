#
# Module manifest for module 'ProxyCommand'
#
# Generated by: horker
#
# Generated on: 2017/12/03
#

@{

# Script module or binary module file associated with this manifest.
RootModule = 'ProxyCommand.psm1'

# Version number of this module.
ModuleVersion = '1.0.0'

# Supported PSEditions
# CompatiblePSEditions = ''

# ID used to uniquely identify this module
GUID = 'f482a1af-fdd3-4548-9b56-58149d54ce21'

# Author of this module
Author = 'horker'

# Company or vendor of this module
CompanyName = ''

# Copyright statement for this module
Copyright = '(c) 2018 horker. All rights reserved.'

# Description of the functionality provided by this module
Description = @"
ProxyCommand is a PowerShell cmdlet to generate a proxy command.

On Windows, applications reside in their own directories. Each time you want to use them in the command line environment (cmd.exe or PowerShell), you have to add their directories to the PATH environment. Soon or later, you will notice that your PATH environment becomes too long and difficult to maintain.

Symbolic or hard links can't help because applications assume that their related files should be placed in the 'application folder', or the same directory as they are located in. Linked executables try to find their files in the directory where they exist, and fail.

A proxy command is similar to a symbolic link, but it is a small program to call a target executable as child process. From a child process's point of view, there are no differences from direct call by the user. Thus everthing works fine.

The module exports one cmdlet New-ProxyCommand. For example, if you want to use MSBuild.exe in the command line, enter the following command:

PS> mkdir ~/proxybin
PS> New-ProxyCommand 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin\amd64\MSBuild.exe' ~/proxybin

In addition, you have to add the ~/proxybin directory to the PATH environment. Then you can use MSBuild in the commnad line.
"@

# Minimum version of the Windows PowerShell engine required by this module
# PowerShellVersion = ''

# Name of the Windows PowerShell host required by this module
# PowerShellHostName = ''

# Minimum version of the Windows PowerShell host required by this module
# PowerShellHostVersion = ''

# Minimum version of Microsoft .NET Framework required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
#DotNetFrameworkVersion = ''

# Minimum version of the common language runtime (CLR) required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
# CLRVersion = ''

# Processor architecture (None, X86, Amd64) required by this module
ProcessorArchitecture = 'Amd64'

# Modules that must be imported into the global environment prior to importing this module
# RequiredModules = @()

# Assemblies that must be loaded prior to importing this module
# RequiredAssemblies = @()

# Script files (.ps1) that are run in the caller's environment prior to importing this module.
# ScriptsToProcess = @()

# Type files (.ps1xml) to be loaded when importing this module
# TypesToProcess = @()

# Format files (.ps1xml) to be loaded when importing this module
# FormatsToProcess = @()

# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
# NestedModules = @()

# Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.
FunctionsToExport = @(
  "New-ProxyCommand"
  "Show-ProxyCommand"
)

# Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export.
CmdletsToExport = @()

# Variables to export from this module
VariablesToExport = @()

# Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export.
AliasesToExport = @()

# DSC resources to export from this module
# DscResourcesToExport = @()

# List of all modules packaged with this module
# ModuleList = @()

# List of all files packaged with this module
# FileList = @()

# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.
PrivateData = @{

    PSData = @{

        # Tags applied to this module. These help with module discovery in online galleries.
        Tags = @(
          'command', 'proxy', 'path', 'environment', 'variable'
        )

        # A URL to the license for this module.
        LicenseUri = 'https://opensource.org/licenses/MIT'

        # A URL to the main website for this project.
        ProjectUri = 'https://github.com/horker/proxycommand'

        # A URL to an icon representing this module.
        # IconUri = ''

        # ReleaseNotes of this module
        ReleaseNotes = @"
v1.0.0
First release
"@

    } # End of PSData hashtable

} # End of PrivateData hashtable

# HelpInfo URI of this module
# HelpInfoURI = ''

# Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.
# DefaultCommandPrefix = ''

}
